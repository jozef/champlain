;; -*- scheme -*-
; boxed definitions ...

; interface definitions ...

; object definitions ...

(define-object BaseMarker
  (in-module "Champlain")
  (parent "ClutterGroup")
  (c-name "ChamplainBaseMarker")
  (gtype-id "CHAMPLAIN_TYPE_BASE_MARKER")
)

(define-object ErrorTileSource
  (in-module "Champlain")
  (parent "ChamplainTileSource")
  (c-name "ChamplainErrorTileSource")
  (gtype-id "CHAMPLAIN_TYPE_ERROR_TILE_SOURCE")
)

(define-object FileCache
  (in-module "Champlain")
  (parent "ChamplainTileCache")
  (c-name "ChamplainFileCache")
  (gtype-id "CHAMPLAIN_TYPE_FILE_CACHE")
)

(define-object Layer
  (in-module "Champlain")
  (parent "ClutterGroup")
  (c-name "ChamplainLayer")
  (gtype-id "CHAMPLAIN_TYPE_LAYER")
)

(define-object MapSource
  (in-module "Champlain")
  (parent "GInitiallyUnowned")
  (c-name "ChamplainMapSource")
  (gtype-id "CHAMPLAIN_TYPE_MAP_SOURCE")
)

(define-object MapSourceChain
  (in-module "Champlain")
  (parent "ChamplainMapSource")
  (c-name "ChamplainMapSourceChain")
  (gtype-id "CHAMPLAIN_TYPE_MAP_SOURCE_CHAIN")
)

(define-object MapSourceFactory
  (in-module "Champlain")
  (parent "GObject")
  (c-name "ChamplainMapSourceFactory")
  (gtype-id "CHAMPLAIN_TYPE_MAP_SOURCE_FACTORY")
)

(define-object Marker
  (in-module "Champlain")
  (parent "ChamplainBaseMarker")
  (c-name "ChamplainMarker")
  (gtype-id "CHAMPLAIN_TYPE_MARKER")
)

(define-object NetworkTileSource
  (in-module "Champlain")
  (parent "ChamplainTileSource")
  (c-name "ChamplainNetworkTileSource")
  (gtype-id "CHAMPLAIN_TYPE_NETWORK_TILE_SOURCE")
)

(define-object Polygon
  (in-module "Champlain")
  (parent "ClutterGroup")
  (c-name "ChamplainPolygon")
  (gtype-id "CHAMPLAIN_TYPE_POLYGON")
)

(define-object SelectionLayer
  (in-module "Champlain")
  (parent "ChamplainLayer")
  (c-name "ChamplainSelectionLayer")
  (gtype-id "CHAMPLAIN_TYPE_SELECTION_LAYER")
)

(define-object Tile
  (in-module "Champlain")
  (parent "ClutterGroup")
  (c-name "ChamplainTile")
  (gtype-id "CHAMPLAIN_TYPE_TILE")
)

(define-object TileCache
  (in-module "Champlain")
  (parent "ChamplainMapSource")
  (c-name "ChamplainTileCache")
  (gtype-id "CHAMPLAIN_TYPE_TILE_CACHE")
)

(define-object TileSource
  (in-module "Champlain")
  (parent "ChamplainMapSource")
  (c-name "ChamplainTileSource")
  (gtype-id "CHAMPLAIN_TYPE_TILE_SOURCE")
)

(define-object View
  (in-module "Champlain")
  (parent "ClutterGroup")
  (c-name "ChamplainView")
  (gtype-id "CHAMPLAIN_TYPE_VIEW")
)

; pointer definitions ...

;; Enumerations and Flags ...

;; Untyped enumerations and flags ...

(define-enum ScrollMode
  (in-module "Champlain")
  (c-name "ChamplainScrollMode")
  (values
    '("push" "CHAMPLAIN_SCROLL_MODE_PUSH")
    '("kinetic" "CHAMPLAIN_SCROLL_MODE_KINETIC")
  )
)

(define-enum State
  (in-module "Champlain")
  (c-name "ChamplainState")
  (values
    '("none" "CHAMPLAIN_STATE_NONE")
    '("loading" "CHAMPLAIN_STATE_LOADING")
    '("done" "CHAMPLAIN_STATE_DONE")
  )
)

(define-enum MapProjection
  (in-module "Champlain")
  (c-name "ChamplainMapProjection")
  (values
    '("mercator" "CHAMPLAIN_MAP_PROJECTION_MERCATOR")
  )
)

(define-enum SelectionMode
  (in-module "Champlain")
  (c-name "ChamplainSelectionMode")
  (values
    '("none" "CHAMPLAIN_SELECTION_NONE")
    '("single" "CHAMPLAIN_SELECTION_SINGLE")
    '("multiple" "CHAMPLAIN_SELECTION_MULTIPLE")
  )
)

(define-enum Unit
  (in-module "Champlain")
  (c-name "ChamplainUnit")
  (values
    '("km" "CHAMPLAIN_UNIT_KM")
    '("miles" "CHAMPLAIN_UNIT_MILES")
  )
)


;; From champlain-base-marker.h

(define-function base_marker_get_type
  (c-name "champlain_base_marker_get_type")
  (return-type "GType")
)

(define-function base_marker_new
  (c-name "champlain_base_marker_new")
  (is-constructor-of "ChamplainBaseMarker")
  (return-type "ClutterActor*")
)

(define-method set_position
  (of-object "ChamplainBaseMarker")
  (c-name "champlain_base_marker_set_position")
  (return-type "none")
  (parameters
    '("gdouble" "longitude")
    '("gdouble" "latitude")
  )
)

(define-method get_latitude
  (of-object "ChamplainBaseMarker")
  (c-name "champlain_base_marker_get_latitude")
  (return-type "gdouble")
)

(define-method get_longitude
  (of-object "ChamplainBaseMarker")
  (c-name "champlain_base_marker_get_longitude")
  (return-type "gdouble")
)

(define-method set_highlighted
  (of-object "ChamplainBaseMarker")
  (c-name "champlain_base_marker_set_highlighted")
  (return-type "none")
  (parameters
    '("gboolean" "value")
  )
)

(define-method get_highlighted
  (of-object "ChamplainBaseMarker")
  (c-name "champlain_base_marker_get_highlighted")
  (return-type "gboolean")
)

(define-method animate_in
  (of-object "ChamplainBaseMarker")
  (c-name "champlain_base_marker_animate_in")
  (return-type "none")
)

(define-method animate_in_with_delay
  (of-object "ChamplainBaseMarker")
  (c-name "champlain_base_marker_animate_in_with_delay")
  (return-type "none")
  (parameters
    '("guint" "delay")
  )
)

(define-method animate_out
  (of-object "ChamplainBaseMarker")
  (c-name "champlain_base_marker_animate_out")
  (return-type "none")
)

(define-method animate_out_with_delay
  (of-object "ChamplainBaseMarker")
  (c-name "champlain_base_marker_animate_out_with_delay")
  (return-type "none")
  (parameters
    '("guint" "delay")
  )
)



;; From champlain-defines.h



;; From champlain-error-tile-source.h

(define-function error_tile_source_get_type
  (c-name "champlain_error_tile_source_get_type")
  (return-type "GType")
)

(define-function error_tile_source_new_full
  (c-name "champlain_error_tile_source_new_full")
  (return-type "ChamplainErrorTileSource*")
  (parameters
    '("guint" "tile_size")
  )
)



;; From champlain-file-cache.h

(define-function file_cache_get_type
  (c-name "champlain_file_cache_get_type")
  (return-type "GType")
)

(define-function file_cache_new
  (c-name "champlain_file_cache_new")
  (is-constructor-of "ChamplainFileCache")
  (return-type "ChamplainFileCache*")
)

(define-function file_cache_new_full
  (c-name "champlain_file_cache_new_full")
  (return-type "ChamplainFileCache*")
  (parameters
    '("guint" "size_limit")
    '("const-gchar*" "cache_dir")
    '("gboolean" "persistent")
  )
)

(define-method get_size_limit
  (of-object "ChamplainFileCache")
  (c-name "champlain_file_cache_get_size_limit")
  (return-type "guint")
)

(define-method set_size_limit
  (of-object "ChamplainFileCache")
  (c-name "champlain_file_cache_set_size_limit")
  (return-type "none")
  (parameters
    '("guint" "size_limit")
  )
)

(define-method get_cache_dir
  (of-object "ChamplainFileCache")
  (c-name "champlain_file_cache_get_cache_dir")
  (return-type "const-gchar*")
)

(define-method purge
  (of-object "ChamplainFileCache")
  (c-name "champlain_file_cache_purge")
  (return-type "none")
)

(define-method purge_on_idle
  (of-object "ChamplainFileCache")
  (c-name "champlain_file_cache_purge_on_idle")
  (return-type "none")
)



;; From champlain-layer.h

(define-function layer_get_type
  (c-name "champlain_layer_get_type")
  (return-type "GType")
)

(define-function layer_new
  (c-name "champlain_layer_new")
  (is-constructor-of "ChamplainLayer")
  (return-type "ChamplainLayer*")
)

(define-method show
  (of-object "ChamplainLayer")
  (c-name "champlain_layer_show")
  (return-type "none")
)

(define-method hide
  (of-object "ChamplainLayer")
  (c-name "champlain_layer_hide")
  (return-type "none")
)

(define-method add_marker
  (of-object "ChamplainLayer")
  (c-name "champlain_layer_add_marker")
  (return-type "none")
  (parameters
    '("ChamplainBaseMarker*" "marker")
  )
)

(define-method remove_marker
  (of-object "ChamplainLayer")
  (c-name "champlain_layer_remove_marker")
  (return-type "none")
  (parameters
    '("ChamplainBaseMarker*" "marker")
  )
)

(define-method animate_in_all_markers
  (of-object "ChamplainLayer")
  (c-name "champlain_layer_animate_in_all_markers")
  (return-type "none")
)

(define-method animate_out_all_markers
  (of-object "ChamplainLayer")
  (c-name "champlain_layer_animate_out_all_markers")
  (return-type "none")
)

(define-method show_all_markers
  (of-object "ChamplainLayer")
  (c-name "champlain_layer_show_all_markers")
  (return-type "none")
)

(define-method hide_all_markers
  (of-object "ChamplainLayer")
  (c-name "champlain_layer_hide_all_markers")
  (return-type "none")
)



;; From champlain-map-source-chain.h

(define-function map_source_chain_get_type
  (c-name "champlain_map_source_chain_get_type")
  (return-type "GType")
)

(define-function map_source_chain_new
  (c-name "champlain_map_source_chain_new")
  (is-constructor-of "ChamplainMapSourceChain")
  (return-type "ChamplainMapSourceChain*")
)

(define-method push
  (of-object "ChamplainMapSourceChain")
  (c-name "champlain_map_source_chain_push")
  (return-type "none")
  (parameters
    '("ChamplainMapSource*" "map_source")
  )
)

(define-method pop
  (of-object "ChamplainMapSourceChain")
  (c-name "champlain_map_source_chain_pop")
  (return-type "none")
)



;; From champlain-map-source-desc.h

(define-function map_source_desc_get_type
  (c-name "champlain_map_source_desc_get_type")
  (return-type "GType")
)

(define-method copy
  (of-object "ChamplainMapSourceDesc")
  (c-name "champlain_map_source_desc_copy")
  (return-type "ChamplainMapSourceDesc*")
)

(define-method free
  (of-object "ChamplainMapSourceDesc")
  (c-name "champlain_map_source_desc_free")
  (return-type "none")
)

(define-function map_source_desc_new
  (c-name "champlain_map_source_desc_new")
  (is-constructor-of "ChamplainMapSourceDesc")
  (return-type "ChamplainMapSourceDesc*")
)



;; From champlain-map-source-factory.h

(define-function map_source_factory_get_type
  (c-name "champlain_map_source_factory_get_type")
  (return-type "GType")
)

(define-function map_source_factory_dup_default
  (c-name "champlain_map_source_factory_dup_default")
  (return-type "ChamplainMapSourceFactory*")
)

(define-method dup_list
  (of-object "ChamplainMapSourceFactory")
  (c-name "champlain_map_source_factory_dup_list")
  (return-type "GSList*")
)

(define-method create
  (of-object "ChamplainMapSourceFactory")
  (c-name "champlain_map_source_factory_create")
  (return-type "ChamplainMapSource*")
  (parameters
    '("const-gchar*" "id")
  )
)

(define-method create_cached_source
  (of-object "ChamplainMapSourceFactory")
  (c-name "champlain_map_source_factory_create_cached_source")
  (return-type "ChamplainMapSource*")
  (parameters
    '("const-gchar*" "id")
  )
)

(define-method register
  (of-object "ChamplainMapSourceFactory")
  (c-name "champlain_map_source_factory_register")
  (return-type "gboolean")
  (parameters
    '("ChamplainMapSourceDesc*" "desc")
    '("ChamplainMapSourceConstructor" "constructor")
    '("gpointer" "data")
  )
)



;; From champlain-map-source.h

(define-function map_source_get_type
  (c-name "champlain_map_source_get_type")
  (return-type "GType")
)

(define-method get_next_source
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_next_source")
  (return-type "ChamplainMapSource*")
)

(define-method set_next_source
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_set_next_source")
  (return-type "none")
  (parameters
    '("ChamplainMapSource*" "next_source")
  )
)

(define-method get_id
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_id")
  (return-type "const-gchar*")
)

(define-method get_name
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_name")
  (return-type "const-gchar*")
)

(define-method get_license
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_license")
  (return-type "const-gchar*")
)

(define-method get_license_uri
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_license_uri")
  (return-type "const-gchar*")
)

(define-method get_min_zoom_level
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_min_zoom_level")
  (return-type "guint")
)

(define-method get_max_zoom_level
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_max_zoom_level")
  (return-type "guint")
)

(define-method get_tile_size
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_tile_size")
  (return-type "guint")
)

(define-method get_projection
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_projection")
  (return-type "ChamplainMapProjection")
)

(define-method get_x
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_x")
  (return-type "guint")
  (parameters
    '("guint" "zoom_level")
    '("gdouble" "longitude")
  )
)

(define-method get_y
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_y")
  (return-type "guint")
  (parameters
    '("guint" "zoom_level")
    '("gdouble" "latitude")
  )
)

(define-method get_longitude
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_longitude")
  (return-type "gdouble")
  (parameters
    '("guint" "zoom_level")
    '("guint" "x")
  )
)

(define-method get_latitude
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_latitude")
  (return-type "gdouble")
  (parameters
    '("guint" "zoom_level")
    '("guint" "y")
  )
)

(define-method get_row_count
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_row_count")
  (return-type "guint")
  (parameters
    '("guint" "zoom_level")
  )
)

(define-method get_column_count
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_column_count")
  (return-type "guint")
  (parameters
    '("guint" "zoom_level")
  )
)

(define-method get_meters_per_pixel
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_get_meters_per_pixel")
  (return-type "gdouble")
  (parameters
    '("guint" "zoom_level")
    '("gdouble" "latitude")
    '("gdouble" "longitude")
  )
)

(define-method fill_tile
  (of-object "ChamplainMapSource")
  (c-name "champlain_map_source_fill_tile")
  (return-type "none")
  (parameters
    '("ChamplainTile*" "tile")
  )
)

(define-virtual get_id
  (of-object "ChamplainMapSource")
  (return-type "const-gchar*")
)

(define-virtual get_name
  (of-object "ChamplainMapSource")
  (return-type "const-gchar*")
)

(define-virtual get_license
  (of-object "ChamplainMapSource")
  (return-type "const-gchar*")
)

(define-virtual get_license_uri
  (of-object "ChamplainMapSource")
  (return-type "const-gchar*")
)

(define-virtual get_min_zoom_level
  (of-object "ChamplainMapSource")
  (return-type "guint")
)

(define-virtual get_max_zoom_level
  (of-object "ChamplainMapSource")
  (return-type "guint")
)

(define-virtual get_tile_size
  (of-object "ChamplainMapSource")
  (return-type "guint")
)

(define-virtual get_projection
  (of-object "ChamplainMapSource")
  (return-type "ChamplainMapProjection")
)

(define-virtual fill_tile
  (of-object "ChamplainMapSource")
  (return-type "none")
  (parameters
    '("ChamplainTile*" "tile")
  )
)

(define-virtual on_set_next_source
  (of-object "ChamplainMapSource")
  (return-type "none")
  (parameters
    '("ChamplainMapSource*" "next_source")
    '("ChamplainMapSource*" "new_next_source")
  )
)



;; From champlain-marker.h

(define-function marker_get_type
  (c-name "champlain_marker_get_type")
  (return-type "GType")
)

(define-function marker_new
  (c-name "champlain_marker_new")
  (is-constructor-of "ChamplainMarker")
  (return-type "ClutterActor*")
)

(define-function marker_new_with_text
  (c-name "champlain_marker_new_with_text")
  (return-type "ClutterActor*")
  (parameters
    '("const-gchar*" "text")
    '("const-gchar*" "font")
    '("ClutterColor*" "text_color")
    '("ClutterColor*" "marker_color")
  )
)

(define-function marker_new_with_image
  (c-name "champlain_marker_new_with_image")
  (return-type "ClutterActor*")
  (parameters
    '("ClutterActor*" "actor")
  )
)

(define-function marker_new_from_file
  (c-name "champlain_marker_new_from_file")
  (return-type "ClutterActor*")
  (parameters
    '("const-gchar*" "filename")
    '("GError**" "error")
  )
)

(define-function marker_new_full
  (c-name "champlain_marker_new_full")
  (return-type "ClutterActor*")
  (parameters
    '("const-gchar*" "text")
    '("ClutterActor*" "actor")
  )
)

(define-method set_text
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_set_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method set_image
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_set_image")
  (return-type "none")
  (parameters
    '("ClutterActor*" "image")
  )
)

(define-method set_use_markup
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_set_use_markup")
  (return-type "none")
  (parameters
    '("gboolean" "use_markup")
  )
)

(define-method set_alignment
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_set_alignment")
  (return-type "none")
  (parameters
    '("PangoAlignment" "alignment")
  )
)

(define-method set_color
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_set_color")
  (return-type "none")
  (parameters
    '("const-ClutterColor*" "color")
  )
)

(define-method set_text_color
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_set_text_color")
  (return-type "none")
  (parameters
    '("const-ClutterColor*" "color")
  )
)

(define-method set_font_name
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_set_font_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "font_name")
  )
)

(define-method set_wrap
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_set_wrap")
  (return-type "none")
  (parameters
    '("gboolean" "wrap")
  )
)

(define-method set_wrap_mode
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_set_wrap_mode")
  (return-type "none")
  (parameters
    '("PangoWrapMode" "wrap_mode")
  )
)

(define-method set_attributes
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_set_attributes")
  (return-type "none")
  (parameters
    '("PangoAttrList*" "list")
  )
)

(define-method set_single_line_mode
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_set_single_line_mode")
  (return-type "none")
  (parameters
    '("gboolean" "mode")
  )
)

(define-method set_ellipsize
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_set_ellipsize")
  (return-type "none")
  (parameters
    '("PangoEllipsizeMode" "mode")
  )
)

(define-method set_draw_background
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_set_draw_background")
  (return-type "none")
  (parameters
    '("gboolean" "background")
  )
)

(define-method get_use_markup
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_get_use_markup")
  (return-type "gboolean")
)

(define-method get_text
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_get_text")
  (return-type "const-gchar*")
)

(define-method get_image
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_get_image")
  (return-type "ClutterActor*")
)

(define-method get_alignment
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_get_alignment")
  (return-type "PangoAlignment")
)

(define-method get_color
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_get_color")
  (return-type "ClutterColor*")
)

(define-method get_text_color
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_get_text_color")
  (return-type "ClutterColor*")
)

(define-method get_font_name
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_get_font_name")
  (return-type "const-gchar*")
)

(define-method get_wrap
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_get_wrap")
  (return-type "gboolean")
)

(define-method get_wrap_mode
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_get_wrap_mode")
  (return-type "PangoWrapMode")
)

(define-method get_ellipsize
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_get_ellipsize")
  (return-type "PangoEllipsizeMode")
)

(define-method get_single_line_mode
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_get_single_line_mode")
  (return-type "gboolean")
)

(define-method get_draw_background
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_get_draw_background")
  (return-type "gboolean")
)

(define-function marker_set_highlight_color
  (c-name "champlain_marker_set_highlight_color")
  (return-type "none")
  (parameters
    '("ClutterColor*" "color")
  )
)

(define-function marker_get_highlight_color
  (c-name "champlain_marker_get_highlight_color")
  (return-type "const-ClutterColor*")
)

(define-function marker_set_highlight_text_color
  (c-name "champlain_marker_set_highlight_text_color")
  (return-type "none")
  (parameters
    '("ClutterColor*" "color")
  )
)

(define-function marker_get_highlight_text_color
  (c-name "champlain_marker_get_highlight_text_color")
  (return-type "const-ClutterColor*")
)

(define-method queue_redraw
  (of-object "ChamplainMarker")
  (c-name "champlain_marker_queue_redraw")
  (return-type "none")
)

(define-virtual draw_marker
  (of-object "ChamplainMarker")
  (return-type "none")
)



;; From champlain-network-tile-source.h

(define-function network_tile_source_get_type
  (c-name "champlain_network_tile_source_get_type")
  (return-type "GType")
)

(define-function network_tile_source_new_full
  (c-name "champlain_network_tile_source_new_full")
  (return-type "ChamplainNetworkTileSource*")
  (parameters
    '("const-gchar*" "id")
    '("const-gchar*" "name")
    '("const-gchar*" "license")
    '("const-gchar*" "license_uri")
    '("guint" "min_zoom")
    '("guint" "max_zoom")
    '("guint" "tile_size")
    '("ChamplainMapProjection" "projection")
    '("const-gchar*" "uri_format")
  )
)

(define-method get_uri_format
  (of-object "ChamplainNetworkTileSource")
  (c-name "champlain_network_tile_source_get_uri_format")
  (return-type "const-gchar*")
)

(define-method set_uri_format
  (of-object "ChamplainNetworkTileSource")
  (c-name "champlain_network_tile_source_set_uri_format")
  (return-type "none")
  (parameters
    '("const-gchar*" "uri_format")
  )
)

(define-method get_offline
  (of-object "ChamplainNetworkTileSource")
  (c-name "champlain_network_tile_source_get_offline")
  (return-type "gboolean")
)

(define-method set_offline
  (of-object "ChamplainNetworkTileSource")
  (c-name "champlain_network_tile_source_set_offline")
  (return-type "none")
  (parameters
    '("gboolean" "offline")
  )
)

(define-method get_proxy_uri
  (of-object "ChamplainNetworkTileSource")
  (c-name "champlain_network_tile_source_get_proxy_uri")
  (return-type "const-gchar*")
)

(define-method set_proxy_uri
  (of-object "ChamplainNetworkTileSource")
  (c-name "champlain_network_tile_source_set_proxy_uri")
  (return-type "none")
  (parameters
    '("const-gchar*" "proxy_uri")
  )
)



;; From champlain-point.h

(define-function point_get_type
  (c-name "champlain_point_get_type")
  (return-type "GType")
)

(define-method copy
  (of-object "ChamplainPoint")
  (c-name "champlain_point_copy")
  (return-type "ChamplainPoint*")
)

(define-method free
  (of-object "ChamplainPoint")
  (c-name "champlain_point_free")
  (return-type "none")
)

(define-function point_new
  (c-name "champlain_point_new")
  (is-constructor-of "ChamplainPoint")
  (return-type "ChamplainPoint*")
  (parameters
    '("gdouble" "lat")
    '("gdouble" "lon")
  )
)



;; From champlain-polygon.h

(define-function polygon_get_type
  (c-name "champlain_polygon_get_type")
  (return-type "GType")
)

(define-function polygon_new
  (c-name "champlain_polygon_new")
  (is-constructor-of "ChamplainPolygon")
  (return-type "ChamplainPolygon*")
)

(define-method append_point
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_append_point")
  (return-type "ChamplainPoint*")
  (parameters
    '("gdouble" "lat")
    '("gdouble" "lon")
  )
)

(define-method insert_point
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_insert_point")
  (return-type "ChamplainPoint*")
  (parameters
    '("gdouble" "lat")
    '("gdouble" "lon")
    '("gint" "pos")
  )
)

(define-method remove_point
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_remove_point")
  (return-type "none")
  (parameters
    '("ChamplainPoint*" "point")
  )
)

(define-method clear_points
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_clear_points")
  (return-type "none")
)

(define-method get_points
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_get_points")
  (return-type "GList*")
)

(define-method set_fill_color
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_set_fill_color")
  (return-type "none")
  (parameters
    '("const-ClutterColor*" "color")
  )
)

(define-method set_stroke_color
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_set_stroke_color")
  (return-type "none")
  (parameters
    '("const-ClutterColor*" "color")
  )
)

(define-method get_fill_color
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_get_fill_color")
  (return-type "ClutterColor*")
)

(define-method get_stroke_color
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_get_stroke_color")
  (return-type "ClutterColor*")
)

(define-method get_fill
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_get_fill")
  (return-type "gboolean")
)

(define-method set_fill
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_set_fill")
  (return-type "none")
  (parameters
    '("gboolean" "value")
  )
)

(define-method get_stroke
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_get_stroke")
  (return-type "gboolean")
)

(define-method set_stroke
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_set_stroke")
  (return-type "none")
  (parameters
    '("gboolean" "value")
  )
)

(define-method set_stroke_width
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_set_stroke_width")
  (return-type "none")
  (parameters
    '("gdouble" "value")
  )
)

(define-method get_stroke_width
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_get_stroke_width")
  (return-type "gdouble")
)

(define-method set_mark_points
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_set_mark_points")
  (return-type "none")
  (parameters
    '("gboolean" "value")
  )
)

(define-method get_mark_points
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_get_mark_points")
  (return-type "gboolean")
)

(define-method show
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_show")
  (return-type "none")
)

(define-method hide
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_hide")
  (return-type "none")
)

(define-method draw_polygon
  (of-object "ChamplainPolygon")
  (c-name "champlain_polygon_draw_polygon")
  (return-type "none")
  (parameters
    '("ChamplainMapSource*" "map_source")
    '("guint" "zoom_level")
    '("gfloat" "width")
    '("gfloat" "height")
    '("gfloat" "shift_x")
    '("gfloat" "shift_y")
  )
)



;; From champlain-selection-layer.h

(define-function selection_layer_get_type
  (c-name "champlain_selection_layer_get_type")
  (return-type "GType")
)

(define-function selection_layer_new
  (c-name "champlain_selection_layer_new")
  (is-constructor-of "ChamplainSelectionLayer")
  (return-type "ChamplainLayer*")
)

(define-method get_selected
  (of-object "ChamplainSelectionLayer")
  (c-name "champlain_selection_layer_get_selected")
  (return-type "ChamplainBaseMarker*")
)

(define-method get_selected_markers
  (of-object "ChamplainSelectionLayer")
  (c-name "champlain_selection_layer_get_selected_markers")
  (return-type "const-GList*")
)

(define-method count_selected_markers
  (of-object "ChamplainSelectionLayer")
  (c-name "champlain_selection_layer_count_selected_markers")
  (return-type "guint")
)

(define-method select
  (of-object "ChamplainSelectionLayer")
  (c-name "champlain_selection_layer_select")
  (return-type "none")
  (parameters
    '("ChamplainBaseMarker*" "marker")
  )
)

(define-method unselect
  (of-object "ChamplainSelectionLayer")
  (c-name "champlain_selection_layer_unselect")
  (return-type "none")
  (parameters
    '("ChamplainBaseMarker*" "marker")
  )
)

(define-method marker_is_selected
  (of-object "ChamplainSelectionLayer")
  (c-name "champlain_selection_layer_marker_is_selected")
  (return-type "gboolean")
  (parameters
    '("ChamplainBaseMarker*" "marker")
  )
)

(define-method select_all
  (of-object "ChamplainSelectionLayer")
  (c-name "champlain_selection_layer_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "ChamplainSelectionLayer")
  (c-name "champlain_selection_layer_unselect_all")
  (return-type "none")
)

(define-method set_selection_mode
  (of-object "ChamplainSelectionLayer")
  (c-name "champlain_selection_layer_set_selection_mode")
  (return-type "none")
  (parameters
    '("ChamplainSelectionMode" "mode")
  )
)

(define-method get_selection_mode
  (of-object "ChamplainSelectionLayer")
  (c-name "champlain_selection_layer_get_selection_mode")
  (return-type "ChamplainSelectionMode")
)



;; From champlain-tile-cache.h

(define-function tile_cache_get_type
  (c-name "champlain_tile_cache_get_type")
  (return-type "GType")
)

(define-method get_persistent
  (of-object "ChamplainTileCache")
  (c-name "champlain_tile_cache_get_persistent")
  (return-type "gboolean")
)

(define-method store_tile
  (of-object "ChamplainTileCache")
  (c-name "champlain_tile_cache_store_tile")
  (return-type "none")
  (parameters
    '("ChamplainTile*" "tile")
    '("const-gchar*" "contents")
    '("gsize" "size")
  )
)

(define-method refresh_tile_time
  (of-object "ChamplainTileCache")
  (c-name "champlain_tile_cache_refresh_tile_time")
  (return-type "none")
  (parameters
    '("ChamplainTile*" "tile")
  )
)

(define-method on_tile_filled
  (of-object "ChamplainTileCache")
  (c-name "champlain_tile_cache_on_tile_filled")
  (return-type "none")
  (parameters
    '("ChamplainTile*" "tile")
  )
)

(define-method clean
  (of-object "ChamplainTileCache")
  (c-name "champlain_tile_cache_clean")
  (return-type "none")
)

(define-virtual store_tile
  (of-object "ChamplainTileCache")
  (return-type "none")
  (parameters
    '("ChamplainTile*" "tile")
    '("const-gchar*" "contents")
    '("gsize" "size")
  )
)

(define-virtual refresh_tile_time
  (of-object "ChamplainTileCache")
  (return-type "none")
  (parameters
    '("ChamplainTile*" "tile")
  )
)

(define-virtual on_tile_filled
  (of-object "ChamplainTileCache")
  (return-type "none")
  (parameters
    '("ChamplainTile*" "tile")
  )
)

(define-virtual clean
  (of-object "ChamplainTileCache")
  (return-type "none")
)



;; From champlain-tile-source.h

(define-function tile_source_get_type
  (c-name "champlain_tile_source_get_type")
  (return-type "GType")
)

(define-method get_cache
  (of-object "ChamplainTileSource")
  (c-name "champlain_tile_source_get_cache")
  (return-type "ChamplainTileCache*")
)

(define-method set_cache
  (of-object "ChamplainTileSource")
  (c-name "champlain_tile_source_set_cache")
  (return-type "none")
  (parameters
    '("ChamplainTileCache*" "cache")
  )
)

(define-method set_id
  (of-object "ChamplainTileSource")
  (c-name "champlain_tile_source_set_id")
  (return-type "none")
  (parameters
    '("const-gchar*" "id")
  )
)

(define-method set_name
  (of-object "ChamplainTileSource")
  (c-name "champlain_tile_source_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method set_license
  (of-object "ChamplainTileSource")
  (c-name "champlain_tile_source_set_license")
  (return-type "none")
  (parameters
    '("const-gchar*" "license")
  )
)

(define-method set_license_uri
  (of-object "ChamplainTileSource")
  (c-name "champlain_tile_source_set_license_uri")
  (return-type "none")
  (parameters
    '("const-gchar*" "license_uri")
  )
)

(define-method set_min_zoom_level
  (of-object "ChamplainTileSource")
  (c-name "champlain_tile_source_set_min_zoom_level")
  (return-type "none")
  (parameters
    '("guint" "zoom_level")
  )
)

(define-method set_max_zoom_level
  (of-object "ChamplainTileSource")
  (c-name "champlain_tile_source_set_max_zoom_level")
  (return-type "none")
  (parameters
    '("guint" "zoom_level")
  )
)

(define-method set_tile_size
  (of-object "ChamplainTileSource")
  (c-name "champlain_tile_source_set_tile_size")
  (return-type "none")
  (parameters
    '("guint" "tile_size")
  )
)

(define-method set_projection
  (of-object "ChamplainTileSource")
  (c-name "champlain_tile_source_set_projection")
  (return-type "none")
  (parameters
    '("ChamplainMapProjection" "projection")
  )
)



;; From champlain-tile.h

(define-function tile_get_type
  (c-name "champlain_tile_get_type")
  (return-type "GType")
)

(define-function tile_new
  (c-name "champlain_tile_new")
  (is-constructor-of "ChamplainTile")
  (return-type "ChamplainTile*")
)

(define-function tile_new_full
  (c-name "champlain_tile_new_full")
  (return-type "ChamplainTile*")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("guint" "size")
    '("gint" "zoom_level")
  )
)

(define-method get_x
  (of-object "ChamplainTile")
  (c-name "champlain_tile_get_x")
  (return-type "gint")
)

(define-method get_y
  (of-object "ChamplainTile")
  (c-name "champlain_tile_get_y")
  (return-type "gint")
)

(define-method get_zoom_level
  (of-object "ChamplainTile")
  (c-name "champlain_tile_get_zoom_level")
  (return-type "gint")
)

(define-method get_size
  (of-object "ChamplainTile")
  (c-name "champlain_tile_get_size")
  (return-type "guint")
)

(define-method get_state
  (of-object "ChamplainTile")
  (c-name "champlain_tile_get_state")
  (return-type "ChamplainState")
)

(define-method get_content
  (of-object "ChamplainTile")
  (c-name "champlain_tile_get_content")
  (return-type "ClutterActor*")
)

(define-method get_modified_time
  (of-object "ChamplainTile")
  (c-name "champlain_tile_get_modified_time")
  (return-type "const-GTimeVal*")
)

(define-method get_modified_time_string
  (of-object "ChamplainTile")
  (c-name "champlain_tile_get_modified_time_string")
  (return-type "gchar*")
)

(define-method get_etag
  (of-object "ChamplainTile")
  (c-name "champlain_tile_get_etag")
  (return-type "const-gchar*")
)

(define-method get_fade_in
  (of-object "ChamplainTile")
  (c-name "champlain_tile_get_fade_in")
  (return-type "gboolean")
)

(define-method set_x
  (of-object "ChamplainTile")
  (c-name "champlain_tile_set_x")
  (return-type "none")
  (parameters
    '("gint" "x")
  )
)

(define-method set_y
  (of-object "ChamplainTile")
  (c-name "champlain_tile_set_y")
  (return-type "none")
  (parameters
    '("gint" "y")
  )
)

(define-method set_zoom_level
  (of-object "ChamplainTile")
  (c-name "champlain_tile_set_zoom_level")
  (return-type "none")
  (parameters
    '("gint" "zoom_level")
  )
)

(define-method set_size
  (of-object "ChamplainTile")
  (c-name "champlain_tile_set_size")
  (return-type "none")
  (parameters
    '("guint" "size")
  )
)

(define-method set_state
  (of-object "ChamplainTile")
  (c-name "champlain_tile_set_state")
  (return-type "none")
  (parameters
    '("ChamplainState" "state")
  )
)

(define-method set_content
  (of-object "ChamplainTile")
  (c-name "champlain_tile_set_content")
  (return-type "none")
  (parameters
    '("ClutterActor*" "actor")
  )
)

(define-method set_etag
  (of-object "ChamplainTile")
  (c-name "champlain_tile_set_etag")
  (return-type "none")
  (parameters
    '("const-gchar*" "etag")
  )
)

(define-method set_modified_time
  (of-object "ChamplainTile")
  (c-name "champlain_tile_set_modified_time")
  (return-type "none")
  (parameters
    '("const-GTimeVal*" "time")
  )
)

(define-method set_fade_in
  (of-object "ChamplainTile")
  (c-name "champlain_tile_set_fade_in")
  (return-type "none")
  (parameters
    '("gboolean" "fade_in")
  )
)



;; From champlain-version.h



;; From champlain-view.h

(define-function view_get_type
  (c-name "champlain_view_get_type")
  (return-type "GType")
)

(define-function view_new
  (c-name "champlain_view_new")
  (is-constructor-of "ChamplainView")
  (return-type "ClutterActor*")
)

(define-method center_on
  (of-object "ChamplainView")
  (c-name "champlain_view_center_on")
  (return-type "none")
  (parameters
    '("gdouble" "latitude")
    '("gdouble" "longitude")
  )
)

(define-method go_to
  (of-object "ChamplainView")
  (c-name "champlain_view_go_to")
  (return-type "none")
  (parameters
    '("gdouble" "latitude")
    '("gdouble" "longitude")
  )
)

(define-method stop_go_to
  (of-object "ChamplainView")
  (c-name "champlain_view_stop_go_to")
  (return-type "none")
)

(define-method zoom_in
  (of-object "ChamplainView")
  (c-name "champlain_view_zoom_in")
  (return-type "none")
)

(define-method zoom_out
  (of-object "ChamplainView")
  (c-name "champlain_view_zoom_out")
  (return-type "none")
)

(define-method set_zoom_level
  (of-object "ChamplainView")
  (c-name "champlain_view_set_zoom_level")
  (return-type "none")
  (parameters
    '("gint" "zoom_level")
  )
)

(define-method set_min_zoom_level
  (of-object "ChamplainView")
  (c-name "champlain_view_set_min_zoom_level")
  (return-type "none")
  (parameters
    '("gint" "zoom_level")
  )
)

(define-method set_max_zoom_level
  (of-object "ChamplainView")
  (c-name "champlain_view_set_max_zoom_level")
  (return-type "none")
  (parameters
    '("gint" "zoom_level")
  )
)

(define-method ensure_visible
  (of-object "ChamplainView")
  (c-name "champlain_view_ensure_visible")
  (return-type "none")
  (parameters
    '("gdouble" "lat1")
    '("gdouble" "lon1")
    '("gdouble" "lat2")
    '("gdouble" "lon2")
    '("gboolean" "animate")
  )
)

(define-method ensure_markers_visible
  (of-object "ChamplainView")
  (c-name "champlain_view_ensure_markers_visible")
  (return-type "none")
  (parameters
    '("ChamplainBaseMarker*[]" "markers")
    '("gboolean" "animate")
  )
)

(define-method set_map_source
  (of-object "ChamplainView")
  (c-name "champlain_view_set_map_source")
  (return-type "none")
  (parameters
    '("ChamplainMapSource*" "map_source")
  )
)

(define-method set_size
  (of-object "ChamplainView")
  (c-name "champlain_view_set_size")
  (return-type "none")
  (parameters
    '("guint" "width")
    '("guint" "height")
  )
)

(define-method set_decel_rate
  (of-object "ChamplainView")
  (c-name "champlain_view_set_decel_rate")
  (return-type "none")
  (parameters
    '("gdouble" "rate")
  )
)

(define-method set_scroll_mode
  (of-object "ChamplainView")
  (c-name "champlain_view_set_scroll_mode")
  (return-type "none")
  (parameters
    '("ChamplainScrollMode" "mode")
  )
)

(define-method set_keep_center_on_resize
  (of-object "ChamplainView")
  (c-name "champlain_view_set_keep_center_on_resize")
  (return-type "none")
  (parameters
    '("gboolean" "value")
  )
)

(define-method set_show_license
  (of-object "ChamplainView")
  (c-name "champlain_view_set_show_license")
  (return-type "none")
  (parameters
    '("gboolean" "value")
  )
)

(define-method set_license_text
  (of-object "ChamplainView")
  (c-name "champlain_view_set_license_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method set_show_scale
  (of-object "ChamplainView")
  (c-name "champlain_view_set_show_scale")
  (return-type "none")
  (parameters
    '("gboolean" "value")
  )
)

(define-method set_scale_unit
  (of-object "ChamplainView")
  (c-name "champlain_view_set_scale_unit")
  (return-type "none")
  (parameters
    '("ChamplainUnit" "unit")
  )
)

(define-method set_max_scale_width
  (of-object "ChamplainView")
  (c-name "champlain_view_set_max_scale_width")
  (return-type "none")
  (parameters
    '("guint" "value")
  )
)

(define-method set_zoom_on_double_click
  (of-object "ChamplainView")
  (c-name "champlain_view_set_zoom_on_double_click")
  (return-type "none")
  (parameters
    '("gboolean" "value")
  )
)

(define-method add_layer
  (of-object "ChamplainView")
  (c-name "champlain_view_add_layer")
  (return-type "none")
  (parameters
    '("ChamplainLayer*" "layer")
  )
)

(define-method remove_layer
  (of-object "ChamplainView")
  (c-name "champlain_view_remove_layer")
  (return-type "none")
  (parameters
    '("ChamplainLayer*" "layer")
  )
)

(define-method get_coords_from_event
  (of-object "ChamplainView")
  (c-name "champlain_view_get_coords_from_event")
  (return-type "gboolean")
  (parameters
    '("ClutterEvent*" "event")
    '("gdouble*" "lat")
    '("gdouble*" "lon")
  )
)

(define-method get_coords_at
  (of-object "ChamplainView")
  (c-name "champlain_view_get_coords_at")
  (return-type "gboolean")
  (parameters
    '("guint" "x")
    '("guint" "y")
    '("gdouble*" "lat")
    '("gdouble*" "lon")
  )
)

(define-method get_zoom_level
  (of-object "ChamplainView")
  (c-name "champlain_view_get_zoom_level")
  (return-type "gint")
)

(define-method get_min_zoom_level
  (of-object "ChamplainView")
  (c-name "champlain_view_get_min_zoom_level")
  (return-type "gint")
)

(define-method get_max_zoom_level
  (of-object "ChamplainView")
  (c-name "champlain_view_get_max_zoom_level")
  (return-type "gint")
)

(define-method get_map_source
  (of-object "ChamplainView")
  (c-name "champlain_view_get_map_source")
  (return-type "ChamplainMapSource*")
)

(define-method get_decel_rate
  (of-object "ChamplainView")
  (c-name "champlain_view_get_decel_rate")
  (return-type "gdouble")
)

(define-method get_scroll_mode
  (of-object "ChamplainView")
  (c-name "champlain_view_get_scroll_mode")
  (return-type "ChamplainScrollMode")
)

(define-method get_keep_center_on_resize
  (of-object "ChamplainView")
  (c-name "champlain_view_get_keep_center_on_resize")
  (return-type "gboolean")
)

(define-method get_show_license
  (of-object "ChamplainView")
  (c-name "champlain_view_get_show_license")
  (return-type "gboolean")
)

(define-method get_license_text
  (of-object "ChamplainView")
  (c-name "champlain_view_get_license_text")
  (return-type "const-gchar*")
)

(define-method get_show_scale
  (of-object "ChamplainView")
  (c-name "champlain_view_get_show_scale")
  (return-type "gboolean")
)

(define-method get_max_scale_width
  (of-object "ChamplainView")
  (c-name "champlain_view_get_max_scale_width")
  (return-type "guint")
)

(define-method get_scale_unit
  (of-object "ChamplainView")
  (c-name "champlain_view_get_scale_unit")
  (return-type "ChamplainUnit")
)

(define-method get_zoom_on_double_click
  (of-object "ChamplainView")
  (c-name "champlain_view_get_zoom_on_double_click")
  (return-type "gboolean")
)

(define-method add_polygon
  (of-object "ChamplainView")
  (c-name "champlain_view_add_polygon")
  (return-type "none")
  (parameters
    '("ChamplainPolygon*" "polygon")
  )
)

(define-method remove_polygon
  (of-object "ChamplainView")
  (c-name "champlain_view_remove_polygon")
  (return-type "none")
  (parameters
    '("ChamplainPolygon*" "polygon")
  )
)



;; From champlain.h


